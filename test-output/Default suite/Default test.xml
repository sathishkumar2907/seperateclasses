<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="DESKTOP-PO91V4R" ignored="8" name="Default test" tests="10" failures="0" timestamp="01 Dec 2017 13:53:15 GMT" time="5.991" errors="0">
  <testcase name="@BeforeTest tvisha1" time="0.463" classname="com.tvisha1.Tvisha1">
    <failure type="org.openqa.selenium.WebDriverException" message="Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: &amp;apos;3.4.0&amp;apos;, revision: &amp;apos;unknown&amp;apos;, time: &amp;apos;unknown&amp;apos;
System info: host: &amp;apos;DESKTOP-PO91V4R&amp;apos;, ip: &amp;apos;192.168.0.73&amp;apos;, os.name: &amp;apos;Windows 10&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;10.0&amp;apos;, java.version: &amp;apos;1.8.0_131&amp;apos;
Driver info: driver.version: FirefoxDriver">
      <![CDATA[org.openqa.selenium.WebDriverException: Cannot find firefox binary in PATH. Make sure firefox is installed. OS appears to be: WIN10
Build info: version: '3.4.0', revision: 'unknown', time: 'unknown'
System info: host: 'DESKTOP-PO91V4R', ip: '192.168.0.73', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_131'
Driver info: driver.version: FirefoxDriver
	at org.openqa.selenium.firefox.FirefoxBinary.<init>(FirefoxBinary.java:115)
	at java.util.Optional.orElseGet(Unknown Source)
	at org.openqa.selenium.firefox.FirefoxDriver.toExecutor(FirefoxDriver.java:204)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:108)
	at org.openqa.selenium.firefox.FirefoxDriver.<init>(FirefoxDriver.java:104)
	at com.tvisha1.Tvisha1.tvisha1(Tvisha1.java:26)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:523)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:224)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:146)
	at org.testng.TestRunner.beforeRun(TestRunner.java:626)
	at org.testng.TestRunner.run(TestRunner.java:594)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:132)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:230)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:76)
]]>
    </failure>
  </testcase> <!-- @BeforeTest tvisha1 -->
  <testcase name="@AfterTest quit" time="0.0" classname="com.tvisha1.Tvisha1">
    <skipped/>
  </testcase> <!-- @AfterTest quit -->
  <testcase name="test1" time="0.0" classname="com.tvisha1.Test">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test2" time="0.0" classname="com.tvisha1.Test1">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="proposal_met" time="0.0" classname="com.tvisha1.Test2">
    <skipped/>
  </testcase> <!-- proposal_met -->
  <testcase name="alerts_admin" time="0.0" classname="com.tvisha1.Test3">
    <skipped/>
  </testcase> <!-- alerts_admin -->
  <testcase name="test1" time="0.0" classname="com.tvisha1.Test">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test2" time="0.0" classname="com.tvisha1.Test1">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="proposal_met" time="0.0" classname="com.tvisha1.Test2">
    <skipped/>
  </testcase> <!-- proposal_met -->
  <testcase name="test1" time="0.0" classname="com.tvisha1.Test">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test1" time="0.0" classname="com.tvisha1.Test">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase name="test2" time="0.001" classname="com.tvisha1.Test1">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase name="@AfterTest quit" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
  <testcase name="@AfterTest quit" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
  <testcase name="@AfterTest quit" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
  <testcase name="@AfterTest quit" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @AfterTest quit -->
  <testcase name="@BeforeTest tvisha1" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @BeforeTest tvisha1 -->
  <testcase name="@BeforeTest tvisha1" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @BeforeTest tvisha1 -->
  <testcase name="@BeforeTest tvisha1" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @BeforeTest tvisha1 -->
  <testcase name="@BeforeTest tvisha1" time="0.0" classname="com.tvisha1.Tvisha1">
    <ignored/>
  </testcase> <!-- @BeforeTest tvisha1 -->
</testsuite> <!-- Default test -->
